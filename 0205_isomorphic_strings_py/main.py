
def is_isomorphic(lhs: str, rhs: str) -> bool:
    if len(lhs) != len(rhs):
        return False
    
    if len(lhs) <= 1:
        return False
    
    '''
    Пройдемся по всем символам.

    Создадим словарь, где ключом будет символ из первой строки, а
    значением будет символ из второй строки

    Оновременно мы ищем противоречия.
    Если противоречий нет, то мы говорим, что строка изоморфна.
    '''

    alph = {}
    for idx, ch in enumerate(lhs):
        if ch in alph:
            if alph[ch] != rhs[idx]:
                return False
        else:
            alph[ch] = rhs[idx]

    return True


assert False == is_isomorphic("add", "egg")


'''
Решать на питоне, больше решать в тетрадке.

Нам не нужно красиво, нам нужно понять.

Сортировки можно посмотреть для расширения кругозора.

Смотреть сортировки n log n - прикольные моменты.

Струткура данных - пирамида - сортировки ????? Досмтавать элемент за log n
'''